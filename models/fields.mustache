{{% partial /_layout }}

{{<layout}}
{{$content}}

<article>
    <header>
        <h1>Field Types</h1>

        <p>
            Learn about available field types for your models.
        </p>
    </header>

    <section>
        <p>
            Note: Not all field types are available for all <a href="/models/types">model types</a>,
            and there is a maximum of 15 fields per model type
            (however this may be effectively extended with embedded values)
        </p>
    </section>

    <section>
        <h2>String <code>type: string</code></h2>

        <p>
            The workhorse field type.  Maximum length: 100 characters.
            May be marked as <a href="#unique">unique: true</a>.
        </p>
    </section>

    <section>
        <h2>Boolean <code>type: boolean</code></h2>

        <p>
            true/false boolean value.
        </p>
    </section>

    <section>
        <h2>Integer <code>type: integer</code></h2>

        <p>
            Non-floating 64 bit integer (long).
        </p>
    </section>

    <section>
        <h2>Floating-point Number <code>type: double</code></h2>

        <p>
            64-bit double precision, IEEE 754.
        </p>
    </section>

    <section>
        <h2><a name="uid">UID / URL Slug (type: uid)</a></h2>

        <p>
            Used for "user friendly" unique identifiers destined for URL paths.
        </p>
        <p>
            This field is unique always, and is available for the <a href="/models/types#universal">Universal</a>
            and <a href="/models/types#universal">Content</a> type's.
        </p>
        <p>
            To keep URLs formatted according to best practices, it must start and end with
            any character a-z, A-Z, or 0-9.  Between the start and end, dash characters are also allowed.
            Minimum length is 2 characters.  Maximum length is 100 characters.
        </p>
        <p>
            <b>Note:</b> UID's behave differently than other unique values.  Because they are destined
            for URLs, it's implied that when they are modified the previous value is not lost
            (otherwise any previously published URL would be result in a broken link).
            Therefore a single model may have multiple unique UID values associated with it,
            however at any given time only one is "current" or "primary".
        </p>
        <p>
            In an ideal scenario from an SEO standpoint, if the visitor has reached a URL by an older UID,
            then it's recommended you redirect to the current/primary UID value.
        </p>
    </section>

    <section>
        <h2><a name="embedded">Embedded</a></h2>

        <p>
            This is the field type corresponding to a complex value defined by an
            <a href="/models/types#embedded">Embedded</a> model type.
        </p>
        <p>
            It may be a many valued array/list, in which case there is a limit of <b>20</b>
            embedded entries.
        </p>
    </section>

    <section>
        <h2><a name="unique">Unique Values</a></h2>

        <p>
            The <i>String</i> field type may be marked as unique for the <a href="/models/types#universal">Universal</a>
            model type only.  Unique values are constrained/scoped to the nearest <a href="/models/containers">Container</a>.
        </p>
        <p>
            Deleting/removing a document will delete all associated unique values.
        </p>
        <p>
            Warning: Commits will fail / throw an exception if there is a unique value violation.
            Therefore it's highly recommended that if a unique value is being created or changing,
            that there exists logic to check whether the unique value is available.
        </p>
    </section>
</article>


{{/content}}
{{/layout}}